{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","good1","good2","LENGTH","length","ALPHABET","localeCompare","reverse","App","state","NONE","handleSortClick","setState","handleResetClick","handleReverseClick","className","type","classNames","this","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAiBzB,OAfAG,EAAaC,MAAK,SAACC,EAAeC,GAChC,OAAQL,GACN,KAAKJ,EAASU,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAC9B,KAAKX,EAASY,SACZ,OAAOJ,EAAMK,cAAcJ,GAC7B,QACE,OAAO,MAITJ,GACFC,EAAaQ,UAGRR,G,SAhCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAMe,EAAb,4MACEC,MAAQ,CACNX,YAAY,EACZD,SAAUJ,EAASiB,MAHvB,EAMEC,gBAAkB,SAACd,GACjB,EAAKe,SAAS,CAAEf,cAPpB,EAUEgB,iBAAmB,SAAChB,GAClB,EAAKc,gBAAgBd,GACrB,EAAKe,SAAS,CAAEd,YAAY,KAZhC,EAeEgB,mBAAqB,WACnB,EAAKF,UAAS,SAAAH,GAAK,MAAK,CACtBX,YAAaW,EAAMX,gBAjBzB,4CAqBE,WAAU,IAAD,OACP,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYC,KAAKT,MAAMZ,WAAaJ,EAASY,WAGjDc,QAAS,kBAAM,EAAKR,gBAAgBlB,EAASY,WAT/C,iCAcA,wBACEW,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYC,KAAKT,MAAMZ,WAAaJ,EAASU,SAGjDgB,QAAS,kBAAM,EAAKR,gBAAgBlB,EAASU,SAT/C,4BAcA,wBACEa,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAaC,KAAKT,MAAMX,aAG5BqB,QAASD,KAAKJ,mBAThB,sBAcEI,KAAKT,MAAMZ,WAAaJ,EAASiB,MAAQQ,KAAKT,MAAMX,aAEpD,wBACEkB,KAAK,SACLD,UAAU,4BACVI,QAAS,kBAAM,EAAKN,iBAAiBpB,EAASiB,OAHhD,sBAUJ,6BACE,6BACGf,EAAkBD,EAAiBwB,KAAKT,OACtCW,KAAI,SAAAC,GACH,OACE,oBACE,UAAQ,OADV,SAIGA,GAFIA,iBAtFzB,GAAyBC,IAAMC,WCvD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ed1a02f1.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1: string, good2: string) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSortClick = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  handleResetClick = (sortType: SortType) => {\n    this.handleSortClick(sortType);\n    this.setState({ isReversed: false });\n  };\n\n  handleReverseClick = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-info',\n              {\n                'is-light': this.state.sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={() => this.handleSortClick(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              {\n                'is-light': this.state.sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={() => this.handleSortClick(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              {\n                'is-light': !this.state.isReversed,\n              },\n            )}\n            onClick={this.handleReverseClick}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType !== SortType.NONE || this.state.isReversed)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.handleResetClick(SortType.NONE)}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state)\n              .map(good => {\n                return (\n                  <li\n                    data-cy=\"Good\"\n                    key={good}\n                  >\n                    {good}\n                  </li>\n                );\n              })}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}